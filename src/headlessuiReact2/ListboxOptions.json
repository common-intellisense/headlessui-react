{
  "name": "Listbox.Options",
  "props": {
    "as": {
      "default": "ul",
      "value": "",
      "type": "String | Component",
      "description": "The element or component the Listbox.Options should render as.",
      "description_zh": "The element or component the Listbox.Options should render as."
    },
    "static": {
      "default": "false",
      "value": "",
      "type": "Boolean",
      "description": "Whether the element should ignore the internally managed open/closed\nstate.Note: static and unmount can not be used at the same time. You will\nget a TypeScript error if you try to do it.",
      "description_zh": "Whether the element should ignore the internally managed open/closed\nstate.Note: static and unmount can not be used at the same time. You will\nget a TypeScript error if you try to do it."
    },
    "unmount": {
      "default": "true",
      "value": "",
      "type": "Boolean",
      "description": "Whether the element should be unmounted or hidden based on the\nopen/closed state.Note: static and unmount can not be used at the same time. You will\nget a TypeScript error if you try to do it.",
      "description_zh": "Whether the element should be unmounted or hidden based on the\nopen/closed state.Note: static and unmount can not be used at the same time. You will\nget a TypeScript error if you try to do it."
    },
    ":open": {
      "default": "",
      "value": "",
      "type": "Boolean",
      "description": "Whether or not the Listbox is open.",
      "description_zh": "Whether or not the Listbox is open."
    }
  },
  "link": "https://headlessui.com/v1/react/listbox",
  "link_zh": "https://headlessui.com/v1/react/listbox",
  "typeDetail": {},
  "events": [],
  "methods": [],
  "slots": [],
  "suggestions": [
    "Listbox.Option"
  ],
  "filename": "ListboxOptions"
}
